{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"mafm","text":"<p>Multi-ancestry fine-mapping pipeline with interactive web visualization.</p> <ul> <li>Documentation: https://Jianhua-Wang.github.io/mafm</li> <li>GitHub: https://github.com/Jianhua-Wang/mafm</li> <li>PyPI: https://pypi.org/project/mafm/</li> <li>Free software: MIT</li> </ul>"},{"location":"#features","title":"Features","text":"<ul> <li>Multi-ancestry fine-mapping: Support for multiple fine-mapping tools (SuSiE, FINEMAP, etc.)</li> <li>Meta-analysis capabilities: Combine results across populations and cohorts</li> <li>Quality control: Built-in QC metrics and visualizations</li> <li>Interactive web interface: Explore results through a modern web dashboard</li> <li>Command-line interface: Easy-to-use CLI for all operations</li> </ul>"},{"location":"#installation","title":"Installation","text":""},{"location":"#basic-installation","title":"Basic Installation","text":"<pre><code>pip install mafm\n</code></pre>"},{"location":"#with-web-visualization","title":"With Web Visualization","text":"<p>To use the interactive web interface, install with web dependencies: <pre><code>pip install mafm[web]\n</code></pre></p>"},{"location":"#quick-start","title":"Quick Start","text":""},{"location":"#command-line-usage","title":"Command Line Usage","text":"<pre><code># Run complete fine-mapping pipeline\nmafm pipeline input_loci.txt output_dir/\n\n# Launch web visualization interface\nmafm web /path/to/results --port 8080\n\n# View specific loci files\nmafm web /path/to/data \\\n  --allmeta-loci data/allmeta_loci.txt \\\n  --popumeta-loci data/popumeta_loci.txt \\\n  --nometa-loci data/nometa_loci.txt\n</code></pre>"},{"location":"#web-interface","title":"Web Interface","text":"<p>The web interface provides: - Home page: Overview of all loci with interactive filtering - Locus pages: Detailed views with LocusZoom-style plots - Quality control: Comprehensive QC metrics and visualizations - Multi-tool comparison: Compare results across different fine-mapping methods</p> <p>Access the web interface at <code>http://localhost:8080</code> after running <code>mafm web</code>.</p>"},{"location":"#documentation","title":"Documentation","text":"<p>For detailed documentation, see https://Jianhua-Wang.github.io/mafm</p>"},{"location":"#web-visualization","title":"Web Visualization","text":"<p>The web module (<code>mafm.web</code>) provides interactive visualization of fine-mapping results. See mafm/web/README.md for detailed usage instructions.</p>"},{"location":"api/","title":"Modules","text":"<p>Top-level package for mafm.</p>"},{"location":"changelog/","title":"Changelog","text":""},{"location":"changelog/#0026-2025-06-02","title":"[0.0.26] (2025-06-02)","text":""},{"location":"changelog/#added","title":"Added","text":"<ul> <li>add web visualization</li> </ul>"},{"location":"changelog/#0025-2025-06-02","title":"[0.0.25] (2025-06-02)","text":""},{"location":"changelog/#added_1","title":"Added","text":"<ul> <li>add tutorial</li> </ul>"},{"location":"changelog/#0023-2025-02-01","title":"[0.0.23] (2025-02-01)","text":""},{"location":"changelog/#fixed","title":"Fixed","text":"<ul> <li>fix finemap cred bug</li> </ul>"},{"location":"changelog/#0021-2025-01-20","title":"[0.0.21] (2025-01-20)","text":""},{"location":"changelog/#fixed_1","title":"Fixed","text":"<ul> <li>fix no install error for carma</li> </ul>"},{"location":"changelog/#0020-2025-01-20","title":"[0.0.20] (2025-01-20)","text":""},{"location":"changelog/#fixed_2","title":"Fixed","text":"<ul> <li>fix zero maf in finemap</li> </ul>"},{"location":"changelog/#0019-2025-01-20","title":"[0.0.19] (2025-01-20)","text":""},{"location":"changelog/#added_2","title":"Added","text":"<ul> <li>qc support for multiprocessing</li> </ul>"},{"location":"changelog/#0018-2025-01-19","title":"[0.0.18] (2025-01-19)","text":""},{"location":"changelog/#fixed_3","title":"Fixed","text":"<ul> <li>fix the bug of no credible set</li> </ul>"},{"location":"changelog/#0017-2025-01-18","title":"[0.0.17] (2025-01-18)","text":""},{"location":"changelog/#added_3","title":"Added","text":"<ul> <li>support for multiprocessing</li> <li>add progress bar</li> </ul>"},{"location":"changelog/#0016-2025-01-18","title":"[0.0.16] (2025-01-18)","text":""},{"location":"changelog/#added_4","title":"Added","text":"<ul> <li>support for sumstats.gz and ldmap.gz</li> </ul>"},{"location":"changelog/#0015-2024-12-17","title":"[0.0.15] (2024-12-17)","text":""},{"location":"changelog/#added_5","title":"Added","text":"<ul> <li>cli args</li> </ul>"},{"location":"changelog/#0014-2024-12-16","title":"[0.0.14] (2024-12-16)","text":""},{"location":"changelog/#added_6","title":"Added","text":"<ul> <li>cli</li> </ul>"},{"location":"changelog/#0013-2024-12-16","title":"[0.0.13] (2024-12-16)","text":""},{"location":"changelog/#added_7","title":"Added","text":"<ul> <li>pipeline</li> </ul>"},{"location":"changelog/#0012-2024-12-15","title":"[0.0.12] (2024-12-15)","text":""},{"location":"changelog/#added_8","title":"Added","text":"<ul> <li>ensemble fine-mapping</li> </ul>"},{"location":"changelog/#0011-2024-12-15","title":"[0.0.11] (2024-12-15)","text":""},{"location":"changelog/#added_9","title":"Added","text":"<ul> <li>multisusie</li> </ul>"},{"location":"changelog/#0010-2024-12-15","title":"[0.0.10] (2024-12-15)","text":""},{"location":"changelog/#added_10","title":"Added","text":"<ul> <li>susiex</li> <li>Rsparseld</li> <li>CARMA</li> </ul>"},{"location":"changelog/#009-2024-10-21","title":"[0.0.9] (2024-10-21)","text":""},{"location":"changelog/#added_11","title":"Added","text":"<ul> <li>abf</li> <li>susie</li> <li>finemap</li> </ul>"},{"location":"changelog/#008-2024-10-10","title":"[0.0.8] (2024-10-10)","text":""},{"location":"changelog/#added_12","title":"Added","text":"<ul> <li>load ld matrix and ld map</li> <li>munge sumstat</li> <li>example data</li> </ul>"},{"location":"changelog/#007-2024-10-09","title":"[0.0.7] (2024-10-09)","text":""},{"location":"changelog/#added_13","title":"Added","text":"<ul> <li>test for ldmatrix</li> </ul>"},{"location":"changelog/#006-2024-10-09","title":"[0.0.6] (2024-10-09)","text":""},{"location":"changelog/#added_14","title":"Added","text":"<ul> <li>functions for load LD</li> <li>test for ColName</li> </ul>"},{"location":"changelog/#005-2024-10-08","title":"[0.0.5] (2024-10-08)","text":"<ul> <li>First release on PyPI.</li> </ul>"},{"location":"contributing/","title":"Contributing","text":"<p>Contributions are welcome, and they are greatly appreciated! Every little bit helps, and credit will always be given.</p> <p>You can contribute in many ways:</p>"},{"location":"contributing/#types-of-contributions","title":"Types of Contributions","text":""},{"location":"contributing/#report-bugs","title":"Report Bugs","text":"<p>Report bugs at https://github.com/Jianhua-Wang/mafm/issues.</p> <p>If you are reporting a bug, please include:</p> <ul> <li>Your operating system name and version.</li> <li>Any details about your local setup that might be helpful in troubleshooting.</li> <li>Detailed steps to reproduce the bug.</li> </ul>"},{"location":"contributing/#fix-bugs","title":"Fix Bugs","text":"<p>Look through the GitHub issues for bugs. Anything tagged with \"bug\" and \"help wanted\" is open to whoever wants to implement it.</p>"},{"location":"contributing/#implement-features","title":"Implement Features","text":"<p>Look through the GitHub issues for features. Anything tagged with \"enhancement\" and \"help wanted\" is open to whoever wants to implement it.</p>"},{"location":"contributing/#write-documentation","title":"Write Documentation","text":"<p>mafm could always use more documentation, whether as part of the official mafm docs, in docstrings, or even on the web in blog posts, articles, and such.</p>"},{"location":"contributing/#submit-feedback","title":"Submit Feedback","text":"<p>The best way to send feedback is to file an issue at https://github.com/Jianhua-Wang/mafm/issues.</p> <p>If you are proposing a feature:</p> <ul> <li>Explain in detail how it would work.</li> <li>Keep the scope as narrow as possible, to make it easier to implement.</li> <li>Remember that this is a volunteer-driven project, and that contributions   are welcome :)</li> </ul>"},{"location":"contributing/#get-started","title":"Get Started!","text":"<p>Ready to contribute? Here's how to set up <code>mafm</code> for local development.</p> <ol> <li>Fork the <code>mafm</code> repo on GitHub.</li> <li> <p>Clone your fork locally</p> <pre><code>$ git clone git@github.com:your_name_here/mafm.git\n</code></pre> </li> <li> <p>Ensure poetry is installed.</p> </li> <li> <p>Install dependencies and start your virtualenv:</p> <pre><code>$ poetry install -E test -E doc -E dev\n</code></pre> </li> <li> <p>Create a branch for local development:</p> <pre><code>$ git checkout -b name-of-your-bugfix-or-feature\n</code></pre> <p>Now you can make your changes locally.</p> </li> <li> <p>When you're done making changes, check that your changes pass the    tests, including testing other Python versions, with tox:</p> <pre><code>$ poetry run tox\n</code></pre> </li> <li> <p>Commit your changes and push your branch to GitHub:</p> <pre><code>$ git add .\n$ git commit -m \"Your detailed description of your changes.\"\n$ git push origin name-of-your-bugfix-or-feature\n</code></pre> </li> <li> <p>Submit a pull request through the GitHub website.</p> </li> </ol>"},{"location":"contributing/#pull-request-guidelines","title":"Pull Request Guidelines","text":"<p>Before you submit a pull request, check that it meets these guidelines:</p> <ol> <li>The pull request should include tests.</li> <li>If the pull request adds functionality, the docs should be updated. Put    your new functionality into a function with a docstring, and add the    feature to the list in README.md.</li> <li>The pull request should work for Python 3.6, 3.7, 3.8 and 3.9. Check    https://github.com/Jianhua-Wang/mafm/actions    and make sure that the tests pass for all supported Python versions.</li> </ol>"},{"location":"contributing/#tips","title":"Tips","text":"<pre><code>$ poetry run pytest tests/test_mafm.py\n</code></pre> <p>To run a subset of tests.</p>"},{"location":"contributing/#deploying","title":"Deploying","text":"<p>A reminder for the maintainers on how to deploy. Make sure all your changes are committed (including an entry in CHANGELOG.md). Then run:</p> <pre><code>$ poetry run bump2version patch # possible: major / minor / patch\n$ git push\n$ git push --tags\n</code></pre> <p>GitHub Actions will then deploy to PyPI if tests pass.</p>"},{"location":"installation/","title":"Installation","text":""},{"location":"installation/#requirements","title":"Requirements","text":"<p>MAFM requires Python 3.9 or higher. The base installation includes all dependencies needed for fine-mapping analysis.</p>"},{"location":"installation/#installation-options","title":"Installation Options","text":""},{"location":"installation/#standard-installation","title":"Standard Installation","text":"<p>To install the base MAFM package, run this command in your terminal:</p> <pre><code>$ pip install mafm\n</code></pre> <p>This is the preferred method to install MAFM, as it will always install the most recent stable release.</p>"},{"location":"installation/#web-visualization","title":"Web Visualization","text":"<p>To use the interactive web visualization features, install with web dependencies:</p> <pre><code>$ pip install mafm[web]\n</code></pre> <p>This installs additional packages required for the web interface: - <code>dash</code> - Web application framework - <code>dash-bootstrap-components</code> - Bootstrap components for Dash - <code>dash-mantine-components</code> - Mantine components for Dash - <code>plotly</code> - Interactive plotting library</p>"},{"location":"installation/#development-installation","title":"Development Installation","text":"<p>For development or to get the latest features:</p> <pre><code>$ git clone https://github.com/Jianhua-Wang/mafm.git\n$ cd mafm\n$ pip install -e .[web]\n</code></pre>"},{"location":"installation/#verify-installation","title":"Verify Installation","text":"<p>Check that MAFM is installed correctly:</p> <pre><code>$ mafm --help\n</code></pre> <p>For web visualization specifically:</p> <pre><code>$ mafm web --help\n</code></pre> <p>If you see the help output, the installation was successful!</p>"},{"location":"installation/#alternative-installation-methods","title":"Alternative Installation Methods","text":""},{"location":"installation/#using-conda","title":"Using conda","text":"<p>If you prefer conda:</p> <pre><code>$ conda install -c conda-forge mafm\n</code></pre> <p>Note: Web dependencies may need to be installed separately with conda.</p>"},{"location":"installation/#from-source","title":"From source","text":"<p>The source for MAFM can be downloaded from the Github repo.</p> <p>You can either clone the public repository:</p> <pre><code>$ git clone git://github.com/Jianhua-Wang/mafm\n</code></pre> <p>Or download the tarball:</p> <pre><code>$ curl -OJL https://github.com/Jianhua-Wang/mafm/tarball/master\n</code></pre> <p>Once you have a copy of the source, you can install it with:</p> <pre><code>$ pip install .\n</code></pre> <p>For development with web features:</p> <pre><code>$ pip install -e .[web]\n</code></pre>"},{"location":"installation/#troubleshooting","title":"Troubleshooting","text":""},{"location":"installation/#missing-dependencies","title":"Missing Dependencies","text":"<p>If you get import errors when using web features:</p> <pre><code>$ pip install mafm[web]\n</code></pre>"},{"location":"installation/#permission-issues","title":"Permission Issues","text":"<p>If you get permission errors, try installing with <code>--user</code>:</p> <pre><code>$ pip install --user mafm[web]\n</code></pre>"},{"location":"installation/#python-version","title":"Python Version","text":"<p>Ensure you're using Python 3.9 or higher:</p> <pre><code>$ python --version\n</code></pre> <p>If you don't have pip installed, this Python installation guide can guide you through the process.</p>"},{"location":"installation/#next-steps","title":"Next Steps","text":"<p>After installation:</p> <ol> <li>Check out the Quick Start Guide</li> <li>Try the Web Visualization Tutorial</li> <li>See Usage Examples</li> </ol>"},{"location":"tutorial/","title":"Tutorial","text":"<p>Welcome to the comprehensive MAFM (Multi-Ancestry Fine-Mapping) tutorial! This guide will walk you through using MAFM for genetic fine-mapping analysis across different ancestries and cohorts.</p>"},{"location":"tutorial/#what-youll-learn","title":"What You'll Learn","text":"<p>This tutorial is organized into several sections that build upon each other:</p> <ol> <li>Getting Started - Learn what MAFM can do and its overall framework</li> <li>Quick Start - Jump right in with the <code>mafm pipeline</code> command</li> <li>Single-Input Fine-Mapping - Fine-mapping with one cohort or ancestry</li> <li>Multi-Input Fine-Mapping - Fine-mapping across multiple cohorts and ancestries</li> <li>Web Visualization - Interactive web interface for exploring results</li> <li>Advanced Topics - Deep dive into parameters and customization</li> </ol>"},{"location":"tutorial/#prerequisites","title":"Prerequisites","text":"<p>Before starting this tutorial, make sure you have:</p> <ul> <li>MAFM installed (see Installation)</li> <li>Basic understanding of GWAS and fine-mapping concepts</li> <li>Your summary statistics and LD matrices prepared</li> </ul> <p>Example Data</p> <p>Throughout this tutorial, we'll use example datasets included with MAFM. You can find them in the <code>exampledata/</code> directory after installation.</p> <p>Web Visualization</p> <p>To use the interactive web interface, you'll need additional dependencies. Install them with: <pre><code>pip install mafm[web]\n</code></pre></p>"},{"location":"tutorial/#navigation","title":"Navigation","text":"<p>Use the navigation menu on the left to jump between sections, or follow the tutorial sequentially using the \"Next\" links at the bottom of each page.</p> <p>Let's get started! \ud83d\udc49 Getting Started </p>"},{"location":"tutorial/advanced/","title":"Advanced Topics","text":"<p>This section covers advanced MAFM usage including detailed parameter optimization, custom workflows, and troubleshooting complex scenarios.</p>"},{"location":"tutorial/advanced/#tool-specific-parameter-optimization","title":"Tool-Specific Parameter Optimization","text":""},{"location":"tutorial/advanced/#susie-advanced-parameters","title":"SuSiE Advanced Parameters","text":"<p>SuSiE is the most commonly used tool in MAFM. Here's how to optimize its performance:</p> <pre><code>mafm finemap input.txt output/ \\\n    --strategy single_input \\\n    --tool susie \\\n    --max-causal 10 \\\n    --max-iter 100 \\\n    --estimate-residual-variance \\\n    --min-abs-corr 0.5 \\\n    --convergence-tol 1e-3 \\\n    --coverage 0.95\n</code></pre> <p>SuSiE Parameter Tuning</p> <code>--max-causal</code> (L parameter) Start with COJO-estimated value (<code>--set-L-by-cojo</code>) Increase if credible sets seem too restrictive Rule of thumb: L \u2248 number of genome-wide significant hits in region <code>--max-iter</code> Default 100 is usually sufficient Increase to 500+ for complex regions with many causal variants Monitor convergence warnings <code>--estimate-residual-variance</code> Use <code>True</code> when phenotype variance is unknown Use <code>False</code> for standardized effect sizes Can improve convergence in some cases <code>--min-abs-corr</code> Minimum correlation threshold for credible sets Lower values (0.1-0.3) for diverse LD patterns Higher values (0.5-0.8) for strong LD regions"},{"location":"tutorial/advanced/#finemap-advanced-configuration","title":"FINEMAP Advanced Configuration","text":"<p>FINEMAP offers extensive Bayesian model configuration:</p> <pre><code>mafm finemap input.txt output/ \\\n    --strategy single_input \\\n    --tool finemap \\\n    --max-causal 5 \\\n    --n-iter 1000000 \\\n    --n-threads 8 \\\n    --coverage 0.95\n</code></pre> <p>FINEMAP Considerations</p> Computational Requirements Memory usage scales with region size\u00b2  Use more iterations (1M+) for stable results Parallel threads improve speed significantly Model Space Exploration FINEMAP explores all possible causal combinations Exponential complexity limits max-causal to ~5-8 Consider region subdivision for larger L"},{"location":"tutorial/advanced/#multisusie-population-parameters","title":"MultiSuSiE Population Parameters","text":"<p>Fine-tune multi-population analysis:</p> <pre><code>mafm finemap input.txt output/ \\\n    --strategy multi_input \\\n    --tool multisusie \\\n    --max-causal 10 \\\n    --rho 0.75 \\\n    --scaled-prior-variance 0.2 \\\n    --pop-spec-standardization \\\n    --estimate-prior-variance \\\n    --pop-spec-effect-priors \\\n    --iter-before-zeroing-effects 5 \\\n    --prior-tol 1e-9\n</code></pre> <p>MultiSuSiE Optimization</p> <code>--rho</code> (correlation parameter) 0.9-0.95: Strong sharing across populations (most traits) 0.7-0.8: Moderate sharing with some population specificity 0.5-0.6: Weak sharing, mostly population-specific effects Population-specific options Use <code>--pop-spec-standardization</code> when sample sizes vary &gt;10x Use <code>--pop-spec-effect-priors</code> for very different populations Monitor convergence with complex population structure"},{"location":"tutorial/advanced/#carma-model-selection","title":"CARMA Model Selection","text":"<p>CARMA offers sophisticated model uncertainty quantification:</p> <pre><code>mafm finemap input.txt output/ \\\n    --strategy single_input \\\n    --tool carma \\\n    --max-causal 10 \\\n    --effect-size-prior \"Spike-slab\" \\\n    --y-var 1.0 \\\n    --bf-threshold 10.0 \\\n    --outlier-bf-threshold 0.31 \\\n    --max-model-dim 200000 \\\n    --tau 0.04 \\\n    --em-dist \"logistic\"\n</code></pre> <p>CARMA Model Configuration</p> Prior Selection \"Spike-slab\" for sparse genetic architecture \"Cauchy\" for more diffuse effects Bayes Factor Thresholds Lower <code>--bf-threshold</code> includes more models Higher values focus on strongest evidence <code>--outlier-bf-threshold</code> controls outlier detection"},{"location":"tutorial/advanced/#custom-workflow-development","title":"Custom Workflow Development","text":""},{"location":"tutorial/advanced/#manual-pipeline-execution","title":"Manual Pipeline Execution","text":"<p>For maximum control, run pipeline steps separately:</p> <pre><code># Step 1: Meta-analysis\nmafm meta input_loci.txt meta_output/ \\\n    --meta-method meta_by_population \\\n    --threads 4\n\n# Step 2: Quality control  \nmafm qc meta_output/updated_loci.txt qc_output/ \\\n    --threads 4\n\n# Step 3: Review QC and filter problematic studies\n# (Manual inspection of QC outputs)\n\n# Step 4: Fine-mapping with optimized parameters\nmafm finemap filtered_loci.txt final_output/ \\\n    --strategy post_hoc_combine \\\n    --tool susie \\\n    --max-causal 15 \\\n    --combine-cred cluster \\\n    --jaccard-threshold 0.2\n</code></pre>"},{"location":"tutorial/advanced/#parallel-processing-for-multiple-loci","title":"Parallel Processing for Multiple Loci","text":"<p>Process many loci efficiently:</p> <pre><code># Create per-locus input files\nsplit -l 2 all_loci.txt locus_\n\n# Process in parallel\nfor locus_file in locus_*; do\n    locus_id=$(tail -1 $locus_file | cut -f8)\n    mafm pipeline $locus_file results/$locus_id/ \\\n        --tool susie --max-causal 5 &amp;\ndone\nwait\n\n# Combine results\nfind results/ -name \"pips.txt\" -exec cat {} \\; &gt; combined_pips.txt\n</code></pre>"},{"location":"tutorial/advanced/#custom-combination-strategies","title":"Custom Combination Strategies","text":"<p>Implement custom result combination:</p> <pre><code>import pandas as pd\nimport numpy as np\nfrom pathlib import Path\n\ndef custom_pip_combination(pip_files, method=\"harmonic_mean\"):\n    \"\"\"Custom PIP combination across studies.\"\"\"\n    all_pips = []\n\n    for file in pip_files:\n        pips = pd.read_csv(file, sep='\\t', header=None, \n                          names=['SNP', 'PIP'], index_col=0)\n        all_pips.append(pips)\n\n    # Align all studies to same SNP set\n    common_snps = set.intersection(*[set(p.index) for p in all_pips])\n    aligned_pips = [p.loc[common_snps] for p in all_pips]\n\n    if method == \"harmonic_mean\":\n        # Harmonic mean of PIPs\n        pip_matrix = pd.concat(aligned_pips, axis=1)\n        combined = len(pip_matrix.columns) / (1/pip_matrix).sum(axis=1)\n    elif method == \"geometric_mean\":\n        # Geometric mean of PIPs  \n        pip_matrix = pd.concat(aligned_pips, axis=1)\n        combined = pip_matrix.prod(axis=1) ** (1/pip_matrix.shape[1])\n\n    return combined.sort_values(ascending=False)\n</code></pre>"},{"location":"tutorial/advanced/#quality-control-deep-dive","title":"Quality Control Deep Dive","text":""},{"location":"tutorial/advanced/#interpreting-qc-metrics","title":"Interpreting QC Metrics","text":""},{"location":"tutorial/advanced/#s-parameter-interpretation","title":"S Parameter Interpretation","text":"<p>The s parameter measures data quality:</p> <pre><code>import pandas as pd\n\ns_estimates = pd.read_csv('qc_output/s_estimate.txt', sep='\\t')\nprint(f\"Mean s: {s_estimates['s'].mean():.3f}\")\nprint(f\"Max s: {s_estimates['s'].max():.3f}\")\n\n# Flag problematic studies\nproblematic = s_estimates[s_estimates['s'] &gt; 0.2]\nprint(f\"Problematic studies: {len(problematic)}\")\n</code></pre> <p>S Parameter Thresholds</p> <ul> <li>s &lt; 0.1: Excellent data quality</li> <li>0.1 &lt; s &lt; 0.2: Acceptable quality  </li> <li>s &gt; 0.2: Potential issues (investigate further)</li> <li>s &gt; 0.5: Serious problems (consider excluding)</li> </ul>"},{"location":"tutorial/advanced/#cochrans-q-analysis","title":"Cochran's Q Analysis","text":"<p>Assess effect size heterogeneity:</p> <pre><code>cochran_q = pd.read_csv('qc_output/cochran_q.txt', sep='\\t')\n\n# High Q indicates heterogeneity\nhigh_het = cochran_q[cochran_q['Q_pval'] &lt; 0.05]\nprint(f\"SNPs with significant heterogeneity: {len(high_het)}\")\n\n# Examine I\u00b2 statistic\nmean_i2 = cochran_q['I2'].mean()\nprint(f\"Mean I\u00b2: {mean_i2:.1f}%\")\n</code></pre>"},{"location":"tutorial/advanced/#advanced-qc-filtering","title":"Advanced QC Filtering","text":"<pre><code># Filter studies based on QC metrics\npython filter_studies.py \\\n    --input original_loci.txt \\\n    --s-threshold 0.2 \\\n    --het-threshold 0.05 \\\n    --output filtered_loci.txt\n</code></pre> filter_studies.py<pre><code>#!/usr/bin/env python3\nimport pandas as pd\nimport argparse\n\ndef filter_studies(input_file, s_threshold, het_threshold, output_file):\n    # Load original loci\n    loci = pd.read_csv(input_file, sep='\\t')\n\n    # Load QC metrics\n    s_est = pd.read_csv('qc_output/s_estimate.txt', sep='\\t')\n\n    # Filter based on s parameter\n    good_studies = s_est[s_est['s'] &lt;= s_threshold]['study_id']\n    filtered_loci = loci[loci['prefix'].isin(good_studies)]\n\n    # Additional filtering logic here...\n\n    filtered_loci.to_csv(output_file, sep='\\t', index=False)\n    print(f\"Filtered from {len(loci)} to {len(filtered_loci)} studies\")\n\nif __name__ == \"__main__\":\n    parser = argparse.ArgumentParser()\n    parser.add_argument('--input', required=True)\n    parser.add_argument('--s-threshold', type=float, default=0.2)\n    parser.add_argument('--het-threshold', type=float, default=0.05)\n    parser.add_argument('--output', required=True)\n    args = parser.parse_args()\n\n    filter_studies(args.input, args.s_threshold, args.het_threshold, args.output)\n</code></pre>"},{"location":"tutorial/advanced/#performance-optimization","title":"Performance Optimization","text":""},{"location":"tutorial/advanced/#memory-management","title":"Memory Management","text":"<p>For large regions or many populations:</p> <pre><code># Monitor memory usage\nmafm finemap input.txt output/ \\\n    --tool susie \\\n    --max-causal 5 \\\n    --verbose 2&gt;&amp;1 | grep -i memory\n\n# Reduce memory footprint\nexport OMP_NUM_THREADS=1  # Limit thread memory\nulimit -v 32000000       # Set memory limit (32GB)\n</code></pre>"},{"location":"tutorial/advanced/#computational-scaling","title":"Computational Scaling","text":"<pre><code># Scale across multiple nodes\nfor chr in {1..22}; do\n    sbatch --job-name=chr${chr} run_chr.sh $chr\ndone\n</code></pre> run_chr.sh<pre><code>#!/bin/bash\n#SBATCH --mem=32G\n#SBATCH --cpus-per-task=8\n\nchr=$1\nmafm pipeline chr${chr}_loci.txt results/chr${chr}/ \\\n    --threads 8 \\\n    --tool susie \\\n    --max-causal 10\n</code></pre>"},{"location":"tutorial/advanced/#troubleshooting-complex-issues","title":"Troubleshooting Complex Issues","text":""},{"location":"tutorial/advanced/#convergence-problems","title":"Convergence Problems","text":"<p>When tools fail to converge:</p> <p>Convergence Issues</p> SuSiE not converging Increase <code>--max-iter</code> to 500+ Try <code>--estimate-residual-variance</code> Reduce <code>--max-causal</code> if very high Check for numerical instability in LD matrix FINEMAP stuck Increase <code>--n-iter</code> substantially Reduce <code>--max-causal</code> Check for perfect correlation in LD matrix MultiSuSiE unstable Reduce <code>--rho</code> if populations very different Use <code>--pop-spec-effect-priors</code> Check population-specific sample sizes"},{"location":"tutorial/advanced/#ld-matrix-issues","title":"LD Matrix Issues","text":"<p>Common LD matrix problems:</p> <pre><code>import numpy as np\nfrom scipy.linalg import LinAlgError\n\ndef diagnose_ld_matrix(ld_file):\n    \"\"\"Diagnose LD matrix problems.\"\"\"\n    ld = np.load(ld_file)['ld']\n\n    # Check for numerical issues\n    print(f\"Matrix shape: {ld.shape}\")\n    print(f\"Diagonal range: {np.diag(ld).min():.3f} - {np.diag(ld).max():.3f}\")\n    print(f\"Off-diagonal range: {ld[~np.eye(ld.shape[0], dtype=bool)].min():.3f} - {ld[~np.eye(ld.shape[0], dtype=bool)].max():.3f}\")\n\n    # Check positive definiteness\n    try:\n        eigvals = np.linalg.eigvals(ld)\n        min_eigval = eigvals.min()\n        print(f\"Minimum eigenvalue: {min_eigval:.6f}\")\n\n        if min_eigval &lt; -1e-8:\n            print(\"WARNING: Matrix not positive semidefinite\")\n\n        # Check condition number\n        cond_num = np.linalg.cond(ld)\n        print(f\"Condition number: {cond_num:.2e}\")\n\n        if cond_num &gt; 1e12:\n            print(\"WARNING: Matrix is near-singular\")\n\n    except LinAlgError:\n        print(\"ERROR: Cannot compute eigenvalues\")\n\n# Usage\ndiagnose_ld_matrix('data/EUR.UKBB.chr8_41242482_42492482.ld.npz')\n</code></pre>"},{"location":"tutorial/advanced/#missing-data-patterns","title":"Missing Data Patterns","text":"<p>Handle systematic missingness:</p> <pre><code>def analyze_missingness(loci_file):\n    \"\"\"Analyze variant missingness patterns across studies.\"\"\"\n    import pandas as pd\n    from pathlib import Path\n\n    loci = pd.read_csv(loci_file, sep='\\t')\n\n    all_variants = set()\n    study_variants = {}\n\n    for _, row in loci.iterrows():\n        # Load variant list for each study\n        ldmap_file = f\"{row['prefix']}.ldmap\"\n        if Path(ldmap_file).exists():\n            variants = pd.read_csv(ldmap_file, sep='\\t')['SNPID'].tolist()\n            study_variants[row['prefix']] = set(variants)\n            all_variants.update(variants)\n\n    # Create missingness matrix\n    missingness = pd.DataFrame(index=sorted(all_variants), \n                             columns=study_variants.keys())\n\n    for study, variants in study_variants.items():\n        missingness[study] = missingness.index.isin(variants)\n\n    # Summary statistics\n    variant_coverage = missingness.sum(axis=1)\n    study_coverage = missingness.sum(axis=0)\n\n    print(f\"Total variants: {len(all_variants)}\")\n    print(f\"Variants in all studies: {sum(variant_coverage == len(study_variants))}\")\n    print(f\"Study coverage range: {study_coverage.min()} - {study_coverage.max()}\")\n\n    return missingness\n\n# Usage\nmissingness = analyze_missingness('input_loci.txt')\n</code></pre>"},{"location":"tutorial/advanced/#best-practices-summary","title":"Best Practices Summary","text":""},{"location":"tutorial/advanced/#analysis-strategy-selection","title":"Analysis Strategy Selection","text":"<p>Strategy Decision Tree</p> <p>Single well-powered study \u2192 <code>single_input</code> + <code>susie</code></p> <p>Multiple studies, similar populations \u2192 <code>meta_all</code> + <code>multi_input</code> + <code>multisusie</code></p> <p>Multiple studies, different populations \u2192 <code>meta_by_population</code> + <code>post_hoc_combine</code> + <code>susie</code></p> <p>Exploratory analysis \u2192 <code>no_meta</code> + <code>post_hoc_combine</code> + <code>susie</code></p> <p>Research/publication \u2192 Multiple strategies + comparison</p>"},{"location":"tutorial/advanced/#parameter-selection-guidelines","title":"Parameter Selection Guidelines","text":"<ol> <li>Start conservative: Use default parameters initially</li> <li>Validate with simulations: Test on simulated data when possible</li> <li>Compare strategies: Run multiple approaches and compare</li> <li>Document choices: Keep detailed records of parameter decisions</li> <li>Iterate based on results: Adjust parameters based on initial findings</li> </ol>"},{"location":"tutorial/advanced/#quality-control-workflow","title":"Quality Control Workflow","text":"<ol> <li>Always run QC first: Never skip quality control</li> <li>Manual review: Don't rely solely on automated flags</li> <li>Population-specific checks: Different populations may have different issues</li> <li>Iterative filtering: Remove problematic studies and re-run</li> <li>Document exclusions: Keep records of why studies were excluded</li> </ol> <p>This completes the comprehensive MAFM tutorial series. Each section builds upon the previous ones to provide a complete guide to multi-ancestry fine-mapping with MAFM. </p>"},{"location":"tutorial/getting-started/","title":"Getting Started","text":""},{"location":"tutorial/getting-started/#what-is-mafm","title":"What is MAFM?","text":"<p>MAFM (Multi-Ancestry Fine-Mapping) is a comprehensive pipeline for performing statistical fine-mapping analysis across multiple ancestries and cohorts. It provides a unified framework for:</p> <ul> <li>Quality Control: Assess the reliability of summary statistics and LD matrices</li> <li>Meta-Analysis: Combine data across populations and cohorts  </li> <li>Fine-Mapping: Identify causal variants using multiple statistical methods</li> <li>Post-Processing: Combine and interpret results across studies</li> </ul>"},{"location":"tutorial/getting-started/#the-mafm-framework","title":"The MAFM Framework","text":"<p>MAFM's workflow can be visualized as follows:</p> <pre><code>graph TD\n    A[Multiple GWAS&lt;br/&gt;Summary Statistics] --&gt; B[Quality Control]\n    C[Multiple LD&lt;br/&gt;Matrices] --&gt; B\n    B --&gt; D{Meta-Analysis Strategy}\n    D --&gt;|Cross-Ancestry| E[Cross-Ancestry Meta]\n    D --&gt;|Within-Ancestry| F[Within-Ancestry Meta]\n    D --&gt;|No Meta| G[Keep Separate]\n    E --&gt; H[Fine-Mapping]\n    F --&gt; H\n    G --&gt; H\n    H --&gt; I{Fine-Mapping Strategy}\n    I --&gt;|Single Input| J[Run on Each&lt;br/&gt;Study Separately]\n    I --&gt;|Multi Input| K[Run on Combined&lt;br/&gt;Studies Together]\n    I --&gt;|Post-hoc Combine| L[Run Separately&lt;br/&gt;Then Combine Results]\n    J --&gt; M[Results Integration]\n    K --&gt; M\n    L --&gt; M\n    M --&gt; N[Credible Sets &amp;&lt;br/&gt;Posterior Probabilities]</code></pre>"},{"location":"tutorial/getting-started/#core-concepts","title":"Core Concepts","text":""},{"location":"tutorial/getting-started/#1-input-data-types","title":"1. Input Data Types","text":"<p>MAFM works with two main types of input data:</p> <ul> <li>Summary Statistics: GWAS results containing effect sizes, standard errors, and p-values</li> <li>LD Matrices: Linkage disequilibrium correlation matrices from reference panels</li> </ul>"},{"location":"tutorial/getting-started/#2-meta-analysis-strategies","title":"2. Meta-Analysis Strategies","text":"<p>Meta-Analysis Methods</p> <p>MAFM supports three meta-analysis approaches:</p> <ul> <li><code>meta_all</code>: Combine all studies regardless of ancestry</li> <li><code>meta_by_population</code>: Combine studies within each ancestry separately  </li> <li><code>no_meta</code>: Keep all studies separate</li> </ul>"},{"location":"tutorial/getting-started/#3-fine-mapping-strategies","title":"3. Fine-Mapping Strategies","text":"<p>MAFM offers three complementary fine-mapping strategies:</p> <p>Strategy Comparison</p> Single Input (<code>single_input</code>) Use traditional fine-mapping tools that analyze one study at a time Best for: Well-powered single studies, ancestry-specific analysis Multi Input (<code>multi_input</code>) Use tools designed to analyze multiple studies simultaneously Best for: Leveraging shared causal architecture across populations Post-hoc Combine (<code>post_hoc_combine</code>) Run single-input tools on each study, then combine results Best for: Maximum flexibility and interpretability"},{"location":"tutorial/getting-started/#4-supported-fine-mapping-tools","title":"4. Supported Fine-Mapping Tools","text":"Tool Strategy Best Use Case SuSiE Single/Post-hoc General purpose, robust FINEMAP Single/Post-hoc Bayesian model averaging ABF Single/Post-hoc Simple, fast Bayes factors CARMA Single/Post-hoc Model uncertainty quantification RSparsePro Single/Post-hoc Sparse regression approach MultiSuSiE Multi-input Multi-population analysis SuSiEx Multi-input Cross-ancestry fine-mapping"},{"location":"tutorial/getting-started/#key-features","title":"Key Features","text":""},{"location":"tutorial/getting-started/#quality-control-metrics","title":"Quality Control Metrics","text":"<p>MAFM provides comprehensive QC including:</p> <ul> <li>Consistency checks: Kriging RSS to detect allele switches</li> <li>LD structure: Eigenvalue decomposition and 4th moment analysis  </li> <li>Cross-study comparisons: Cochran's Q test for heterogeneity</li> <li>Frequency comparisons: MAF consistency across studies</li> </ul>"},{"location":"tutorial/getting-started/#flexible-output","title":"Flexible Output","text":"<p>MAFM generates:</p> <ul> <li>Credible sets: Sets of variants likely to contain causal variants</li> <li>Posterior inclusion probabilities (PIPs): Individual variant probabilities</li> <li>QC reports: Detailed quality control metrics</li> <li>Meta-analysis results: Combined summary statistics and LD matrices</li> </ul>"},{"location":"tutorial/getting-started/#when-to-use-mafm","title":"When to Use MAFM","text":"<p>Use Cases</p> Multi-ancestry studies Leverage power across populations while accounting for LD differences Multiple cohorts per ancestry Combine studies within ancestry groups for increased power Heterogeneous effect sizes Use post-hoc combination to preserve ancestry-specific signals Quality control focus Extensive QC metrics help identify problematic data <p>Considerations</p> <ul> <li>Requires matched summary statistics and LD matrices</li> <li>Computational requirements scale with number of studies</li> <li>Some tools require specific data formats or parameter tuning</li> </ul>"},{"location":"tutorial/getting-started/#next-steps","title":"Next Steps","text":"<p>Now that you understand the MAFM framework, let's jump into a practical example:</p> <p>\ud83d\udc49 Quick Start Guide - Run your first MAFM analysis</p> <p>Or explore specific scenarios:</p> <ul> <li>Single-Input Fine-Mapping for single-study analysis</li> <li>Multi-Input Fine-Mapping for multi-study analysis </li> </ul>"},{"location":"tutorial/multi-input/","title":"Multi-Input Fine-Mapping","text":"<p>Multi-input fine-mapping analyzes multiple cohorts and ancestries simultaneously to leverage shared genetic architecture while accounting for population differences. This is where MAFM truly shines, offering sophisticated approaches to multi-ancestry genetic analysis.</p>"},{"location":"tutorial/multi-input/#when-to-use-multi-input-strategy","title":"When to Use Multi-Input Strategy","text":"<p>Multi-Input Use Cases</p> Multiple ancestries available Leverage power across populations while modeling LD differences Shared causal architecture When you expect similar causal variants across populations Increased statistical power Combine sample sizes for improved fine-mapping resolution Cross-population validation Identify variants with consistent effects across ancestries"},{"location":"tutorial/multi-input/#multi-input-workflow-components","title":"Multi-Input Workflow Components","text":""},{"location":"tutorial/multi-input/#1-meta-analysis-strategies","title":"1. Meta-Analysis Strategies","text":"<p>The first step is deciding how to combine your studies:</p>"},{"location":"tutorial/multi-input/#cross-ancestry-meta-analysis-meta_all","title":"Cross-Ancestry Meta-Analysis (<code>meta_all</code>)","text":"<p>Combines all studies regardless of ancestry:</p> <pre><code>mafm meta input_loci.txt meta_output/ \\\n    --meta-method meta_all \\\n    --threads 4\n</code></pre> <p>When to use: - Strong prior belief in shared causal variants - Large effect sizes relative to population differences - Increased power is the primary goal</p> <p>What it does: - Performs inverse-variance weighted meta-analysis of summary statistics - Sample-size weighted averaging of LD matrices - Creates single meta-analyzed dataset per locus</p>"},{"location":"tutorial/multi-input/#within-ancestry-meta-analysis-meta_by_population","title":"Within-Ancestry Meta-Analysis (<code>meta_by_population</code>)","text":"<p>Combines studies within each ancestry separately:</p> <pre><code>mafm meta input_loci.txt meta_output/ \\\n    --meta-method meta_by_population \\\n    --threads 4\n</code></pre> <p>When to use: - Population-specific effect sizes expected - Want to preserve ancestry-specific signals - Balanced approach between power and specificity</p> <p>What it does: - Meta-analyzes EUR studies together, AFR studies together, etc. - Maintains population-specific LD structure - Creates separate datasets for each ancestry</p>"},{"location":"tutorial/multi-input/#no-meta-analysis-no_meta","title":"No Meta-Analysis (<code>no_meta</code>)","text":"<p>Keeps all studies separate:</p> <pre><code>mafm meta input_loci.txt meta_output/ \\\n    --meta-method no_meta \\\n    --threads 4\n</code></pre> <p>When to use: - Highly heterogeneous effect sizes - Study-specific technical factors - Maximum preservation of individual study characteristics</p>"},{"location":"tutorial/multi-input/#2-quality-control-across-studies","title":"2. Quality Control Across Studies","text":"<p>Multi-study QC provides insights impossible with single studies:</p> <pre><code>mafm qc input_loci.txt qc_output/ --threads 4\n</code></pre>"},{"location":"tutorial/multi-input/#cross-study-qc-metrics","title":"Cross-Study QC Metrics","text":"Cochran's Q Test Tests for heterogeneity in effect sizes across studies High Q values suggest population or study-specific effects SNP Missingness Patterns Identifies variants missing in specific populations Helps understand coverage differences across ancestries LD Structure Comparison Compares LD patterns across populations Identifies regions with dramatically different LD structure Cross-Ancestry MAF Correlations Compares allele frequencies across populations Detects potential population stratification or technical issues <p>QC Output Files</p> <pre><code>qc_output/\n\u251c\u2500\u2500 cochran_q.txt           # Effect size heterogeneity\n\u251c\u2500\u2500 snp_missingness.txt     # Coverage patterns\n\u251c\u2500\u2500 ld_4th_moment.txt       # LD structure comparison\n\u251c\u2500\u2500 s_estimate.txt          # Consistency parameters\n\u2514\u2500\u2500 maf_comparison.txt      # Frequency comparisons\n</code></pre>"},{"location":"tutorial/multi-input/#3-multi-input-fine-mapping-strategies","title":"3. Multi-Input Fine-Mapping Strategies","text":"<p>MAFM offers three strategies for multi-input fine-mapping:</p>"},{"location":"tutorial/multi-input/#a-multi-input-tools-multi_input","title":"A. Multi-Input Tools (<code>multi_input</code>)","text":"<p>Use tools specifically designed for multi-population analysis:</p> <pre><code>mafm finemap input_loci.txt output/ \\\n    --strategy multi_input \\\n    --tool multisusie \\\n    --max-causal 5\n</code></pre> <p>Supported Tools:</p> <ul> <li>MultiSuSiE: Multi-population extension of SuSiE</li> <li>SuSiEx: Cross-ancestry fine-mapping tool</li> </ul>"},{"location":"tutorial/multi-input/#b-post-hoc-combination-post_hoc_combine","title":"B. Post-hoc Combination (<code>post_hoc_combine</code>)","text":"<p>Run single-input tools on each study, then intelligently combine results:</p> <pre><code>mafm finemap input_loci.txt output/ \\\n    --strategy post_hoc_combine \\\n    --tool susie \\\n    --combine-cred union \\\n    --combine-pip max \\\n    --jaccard-threshold 0.1\n</code></pre> <p>Combination Methods:</p> <p>Credible Set Combination (<code>--combine-cred</code>)</p> <code>union</code> (default) Union of all credible sets from individual studies Most inclusive, captures all potential causal variants <code>intersection</code> Only variants present in credible sets from all studies Most conservative, highest confidence variants only <code>cluster</code> Groups overlapping credible sets using Jaccard similarity Balanced approach, creates meta-credible sets <p>PIP Combination (<code>--combine-pip</code>)</p> <code>max</code> (default) Maximum PIP across all studies for each variant Emphasizes strongest signals <code>mean</code> Average PIP across studies Balanced view of evidence <code>meta</code> Meta-analysis formula: 1 - \u220f(1 - PIP_i) Accounts for independence assumption"},{"location":"tutorial/multi-input/#detailed-tool-descriptions","title":"Detailed Tool Descriptions","text":""},{"location":"tutorial/multi-input/#multisusie","title":"MultiSuSiE","text":"<p>Best for: Multi-population analysis with shared and population-specific effects</p> <pre><code>mafm finemap input_loci.txt output/ \\\n    --strategy multi_input \\\n    --tool multisusie \\\n    --max-causal 10 \\\n    --rho 0.75 \\\n    --scaled-prior-variance 0.2 \\\n    --pop-spec-standardization \\\n    --estimate-prior-variance\n</code></pre> <p>Key Parameters:</p> <ul> <li><code>--rho</code>: Prior correlation between causal variants across populations (0.75)</li> <li><code>--scaled-prior-variance</code>: Prior effect size variance (0.2)  </li> <li><code>--pop-spec-standardization</code>: Use population-specific standardization</li> <li><code>--estimate-prior-variance</code>: Estimate rather than fix prior variance</li> <li><code>--pop-spec-effect-priors</code>: Population-specific effect size priors</li> </ul> <p>MultiSuSiE Guidance</p> <ul> <li>Higher <code>--rho</code> assumes more sharing across populations</li> <li>Use <code>--pop-spec-standardization</code> when sample sizes vary greatly</li> <li><code>--estimate-prior-variance</code> is usually recommended</li> </ul>"},{"location":"tutorial/multi-input/#susiex","title":"SuSiEx","text":"<p>Best for: Cross-ancestry fine-mapping with explicit modeling of population differences</p> <pre><code>mafm finemap input_loci.txt output/ \\\n    --strategy multi_input \\\n    --tool susiex \\\n    --max-causal 5 \\\n    --mult-step \\\n    --keep-ambig \\\n    --min-purity 0.5 \\\n    --tol 1e-3\n</code></pre> <p>Key Parameters:</p> <ul> <li><code>--mult-step</code>: Use multiple refinement steps  </li> <li><code>--keep-ambig</code>: Keep ambiguous SNPs in analysis</li> <li><code>--min-purity</code>: Minimum purity for credible sets (0.5)</li> <li><code>--tol</code>: Convergence tolerance (1e-3)</li> </ul>"},{"location":"tutorial/multi-input/#comprehensive-multi-input-example","title":"Comprehensive Multi-Input Example","text":"<p>Here's a complete workflow for multi-ancestry fine-mapping:</p>"},{"location":"tutorial/multi-input/#step-1-input-preparation","title":"Step 1: Input Preparation","text":"multi_ancestry_loci.txt<pre><code>chr start   end popu    sample_size cohort  prefix  locus_id\n8   41242482    42492482    AFR 89499   MVP data/AFR.MVP.chr8_41242482_42492482 chr8_41242482_42492482\n8   41242482    42492482    EUR 337465  MVP data/EUR.MVP.chr8_41242482_42492482 chr8_41242482_42492482\n8   41242482    42492482    EUR 442817  UKBB    data/EUR.UKBB.chr8_41242482_42492482    chr8_41242482_42492482\n8   41242482    42492482    SAS 8253    UKBB    data/SAS.UKBB.chr8_41242482_42492482    chr8_41242482_42492482\n</code></pre>"},{"location":"tutorial/multi-input/#step-2-quality-control","title":"Step 2: Quality Control","text":"<pre><code># Run comprehensive QC\nmafm qc multi_ancestry_loci.txt qc_results/ --threads 4\n\n# Review heterogeneity\nhead qc_results/cochran_q.txt\n</code></pre>"},{"location":"tutorial/multi-input/#step-3a-cross-ancestry-analysis-with-multisusie","title":"Step 3A: Cross-Ancestry Analysis with MultiSuSiE","text":"<pre><code># Meta-analyze across all populations\nmafm pipeline multi_ancestry_loci.txt results_cross_ancestry/ \\\n    --meta-method meta_all \\\n    --strategy multi_input \\\n    --tool multisusie \\\n    --max-causal 10 \\\n    --rho 0.8 \\\n    --pop-spec-standardization \\\n    --estimate-prior-variance\n</code></pre>"},{"location":"tutorial/multi-input/#step-3b-population-specific-analysis","title":"Step 3B: Population-Specific Analysis","text":"<pre><code># Meta-analyze within populations, then combine\nmafm pipeline multi_ancestry_loci.txt results_pop_specific/ \\\n    --meta-method meta_by_population \\\n    --strategy post_hoc_combine \\\n    --tool susie \\\n    --combine-cred cluster \\\n    --combine-pip meta \\\n    --jaccard-threshold 0.2\n</code></pre>"},{"location":"tutorial/multi-input/#step-4-compare-approaches","title":"Step 4: Compare Approaches","text":"<pre><code># Compare results from different strategies\nimport json\nimport pandas as pd\n\n# Load results\nwith open('results_cross_ancestry/creds.json') as f:\n    cross_ancestry = json.load(f)\n\nwith open('results_pop_specific/creds.json') as f:\n    pop_specific = json.load(f)\n\n# Compare credible sets and PIPs\ncross_pips = pd.read_csv('results_cross_ancestry/pips.txt', \n                        sep='\\t', header=None, names=['SNP', 'PIP'])\npop_pips = pd.read_csv('results_pop_specific/pips.txt', \n                      sep='\\t', header=None, names=['SNP', 'PIP'])\n</code></pre>"},{"location":"tutorial/multi-input/#advanced-multi-input-considerations","title":"Advanced Multi-Input Considerations","text":""},{"location":"tutorial/multi-input/#handling-missing-data","title":"Handling Missing Data","text":"<p>When variants are missing in some populations:</p> <p>Missing Data Strategies</p> Complete case analysis Only use variants present in all studies Reduces power but ensures consistency Imputation Impute missing variants using population-specific references Requires careful validation Weighted analysis Weight contributions by data availability Built into MAFM meta-analysis"},{"location":"tutorial/multi-input/#population-stratification","title":"Population Stratification","text":"<p>When populations have internal structure:</p> <pre><code># Use more conservative thresholds\nmafm finemap input.txt output/ \\\n    --strategy multi_input \\\n    --tool multisusie \\\n    --rho 0.5 \\\n    --min-abs-corr 0.8\n</code></pre>"},{"location":"tutorial/multi-input/#computational-considerations","title":"Computational Considerations","text":"<p>Large multi-population analyses can be computationally intensive:</p> <p>Performance Optimization</p> <ul> <li>Use <code>--threads</code> for parallelization</li> <li>Consider analyzing loci separately for very large studies</li> <li>Monitor memory usage with many populations</li> <li>Use post-hoc combination for maximum flexibility</li> </ul>"},{"location":"tutorial/multi-input/#interpreting-multi-input-results","title":"Interpreting Multi-Input Results","text":""},{"location":"tutorial/multi-input/#population-specific-effects","title":"Population-Specific Effects","text":"<p>Look for variants with: - High PIPs in some populations but not others - Different credible sets across populations - High Cochran's Q values</p>"},{"location":"tutorial/multi-input/#shared-causal-variants","title":"Shared Causal Variants","text":"<p>Evidence includes: - Consistent PIPs across populations - Overlapping credible sets - Low heterogeneity in meta-analysis</p>"},{"location":"tutorial/multi-input/#meta-analysis-benefits","title":"Meta-Analysis Benefits","text":"<p>Compare single-population vs. meta-analysis: - Increased resolution (smaller credible sets) - Higher PIPs for true causal variants - Discovery of additional signals</p>"},{"location":"tutorial/multi-input/#common-multi-input-issues","title":"Common Multi-Input Issues","text":"<p>Troubleshooting Multi-Input Analysis</p> Excessive heterogeneity Use <code>meta_by_population</code> instead of <code>meta_all</code> Check for technical differences between studies Consider population-specific analyses No shared signals May indicate true population-specific effects Check LD structure differences Verify consistent variant coding Computational issues Reduce number of populations analyzed together Use post-hoc combination strategy Increase available memory/compute resources"},{"location":"tutorial/multi-input/#next-steps","title":"Next Steps","text":"<ul> <li>Advanced Topics - Deep dive into parameter optimization and custom workflows</li> <li>Review specific tool documentation for detailed parameter guidance</li> <li>Consider population genetics factors in result interpretation </li> </ul>"},{"location":"tutorial/quick-start/","title":"Quick Start Guide","text":"<p>This guide will get you running your first MAFM analysis in just a few minutes using the <code>mafm pipeline</code> command - the easiest way to perform end-to-end multi-ancestry fine-mapping.</p>"},{"location":"tutorial/quick-start/#what-is-mafm-pipeline","title":"What is <code>mafm pipeline</code>?","text":"<p>The <code>mafm pipeline</code> command runs the complete MAFM workflow in a single command:</p> <ol> <li>Meta-analysis of summary statistics and LD matrices</li> <li>Quality control checks (optional, but recommended)  </li> <li>Fine-mapping using your chosen tool and strategy</li> <li>Results output in standardized formats</li> </ol>"},{"location":"tutorial/quick-start/#input-data-format","title":"Input Data Format","text":"<p>MAFM requires a tab-separated file describing your loci and studies. Here's the required format:</p> Column Description Example <code>chr</code> Chromosome <code>8</code> <code>start</code> Start position (bp) <code>41242482</code> <code>end</code> End position (bp) <code>42492482</code> <code>popu</code> Population/ancestry <code>EUR</code>, <code>AFR</code>, <code>SAS</code>, <code>HIS</code> <code>sample_size</code> Sample size <code>337465</code> <code>cohort</code> Cohort/study name <code>UKBB</code>, <code>MVP</code> <code>prefix</code> File path prefix <code>/path/to/data/EUR.UKBB.chr8_41242482_42492482</code> <code>locus_id</code> Locus identifier <code>chr8_41242482_42492482</code> <p>File Structure</p> <p>For each <code>prefix</code>, MAFM expects these files:</p> <ul> <li><code>{prefix}.sumstats</code> - Summary statistics</li> <li><code>{prefix}.ld</code> or <code>{prefix}.ld.npz</code> - LD matrix  </li> <li><code>{prefix}.ldmap</code> - LD matrix variant map</li> </ul>"},{"location":"tutorial/quick-start/#example-input-file","title":"Example Input File","text":"my_loci.txt<pre><code>chr start   end popu    sample_size cohort  prefix  locus_id\n8   41242482    42492482    AFR 89499   MVP data/AFR.MVP.chr8_41242482_42492482 chr8_41242482_42492482\n8   41242482    42492482    EUR 337465  MVP data/EUR.MVP.chr8_41242482_42492482 chr8_41242482_42492482\n8   41242482    42492482    EUR 442817  UKBB    data/EUR.UKBB.chr8_41242482_42492482    chr8_41242482_42492482\n</code></pre>"},{"location":"tutorial/quick-start/#basic-usage","title":"Basic Usage","text":""},{"location":"tutorial/quick-start/#simple-cross-ancestry-analysis","title":"Simple Cross-Ancestry Analysis","text":"<pre><code>mafm pipeline my_loci.txt output_dir \\\n    --meta-method meta_all \\\n    --strategy multi_input \\\n    --tool multisusie\n</code></pre> <p>This command:</p> <ul> <li>Combines all studies across ancestries (<code>meta_all</code>)</li> <li>Uses multi-input strategy with MultiSuSiE</li> <li>Outputs results to <code>output_dir/</code></li> </ul>"},{"location":"tutorial/quick-start/#population-specific-analysis","title":"Population-Specific Analysis","text":"<pre><code>mafm pipeline my_loci.txt output_dir \\\n    --meta-method meta_by_population \\\n    --strategy post_hoc_combine \\\n    --tool susie\n</code></pre> <p>This command:</p> <ul> <li>Meta-analyzes within each ancestry separately (<code>meta_by_population</code>)</li> <li>Runs SuSiE on each population, then combines results (<code>post_hoc_combine</code>)</li> </ul>"},{"location":"tutorial/quick-start/#understanding-the-output","title":"Understanding the Output","text":"<p>After running <code>mafm pipeline</code>, you'll find these files in your output directory:</p>"},{"location":"tutorial/quick-start/#meta-analysis-results","title":"Meta-Analysis Results","text":"<pre><code>output_dir/\n\u251c\u2500\u2500 {locus_id}.{popu}.{cohort}.sumstat    # Meta-analyzed summary stats\n\u251c\u2500\u2500 {locus_id}.{popu}.{cohort}.ld.npz     # Meta-analyzed LD matrix\n\u2514\u2500\u2500 {locus_id}.{popu}.{cohort}.ldmap      # LD variant mapping\n</code></pre>"},{"location":"tutorial/quick-start/#quality-control-reports","title":"Quality Control Reports","text":"<pre><code>output_dir/\n\u251c\u2500\u2500 s_estimate.txt        # Inconsistency parameter estimates\n\u251c\u2500\u2500 kriging_rss.txt       # Allele switch detection\n\u251c\u2500\u2500 maf_comparison.txt    # MAF consistency across studies\n\u251c\u2500\u2500 cochran_q.txt         # Heterogeneity testing\n\u2514\u2500\u2500 ld_structure.txt      # LD matrix eigenanalysis\n</code></pre>"},{"location":"tutorial/quick-start/#fine-mapping-results","title":"Fine-Mapping Results","text":"<pre><code>output_dir/\n\u251c\u2500\u2500 pips.txt             # Posterior inclusion probabilities\n\u2514\u2500\u2500 creds.json           # Credible sets information\n</code></pre>"},{"location":"tutorial/quick-start/#interpreting-results","title":"Interpreting Results","text":""},{"location":"tutorial/quick-start/#posterior-inclusion-probabilities-pips","title":"Posterior Inclusion Probabilities (PIPs)","text":"<p>The <code>pips.txt</code> file contains PIPs for each variant:</p> pips.txt<pre><code>8-41234567-A-G  0.0234\n8-41235678-C-T  0.8765\n8-41236789-G-A  0.0456\n</code></pre> <ul> <li>Values range from 0 to 1</li> <li>Higher values indicate stronger evidence for causality</li> <li>Typically, variants with PIP &gt; 0.1 are considered noteworthy</li> </ul>"},{"location":"tutorial/quick-start/#credible-sets","title":"Credible Sets","text":"<p>The <code>creds.json</code> file contains credible sets - groups of variants that collectively have high probability of containing the causal variant:</p> creds.json<pre><code>{\n  \"credible_sets\": {\n    \"cs1\": {\n      \"variants\": [\"8-41235678-C-T\", \"8-41235680-A-G\"],\n      \"coverage\": 0.95,\n      \"total_pip\": 0.96\n    }\n  }\n}\n</code></pre>"},{"location":"tutorial/quick-start/#common-options","title":"Common Options","text":""},{"location":"tutorial/quick-start/#meta-analysis-methods","title":"Meta-Analysis Methods","text":"<pre><code># Combine all studies regardless of ancestry\n--meta-method meta_all\n\n# Combine studies within each ancestry separately  \n--meta-method meta_by_population\n\n# Keep all studies separate (no meta-analysis)\n--meta-method no_meta\n</code></pre>"},{"location":"tutorial/quick-start/#fine-mapping-tools","title":"Fine-Mapping Tools","text":"<pre><code># General purpose, robust\n--tool susie\n\n# Multi-ancestry designed tools\n--tool multisusie\n--tool susiex\n\n# Bayesian model averaging\n--tool finemap\n\n# Simple Bayes factors  \n--tool abf\n</code></pre>"},{"location":"tutorial/quick-start/#quality-control","title":"Quality Control","text":"<pre><code># Skip QC (faster but not recommended)\n--skip-qc\n\n# Include QC (default, recommended)\n# No flag needed - QC runs by default\n</code></pre>"},{"location":"tutorial/quick-start/#troubleshooting","title":"Troubleshooting","text":"<p>Common Issues</p> File not found errors Check that your file paths in the input table are correct Ensure summary statistics and LD files exist for each prefix Memory errors Large LD matrices can consume significant memory Consider analyzing loci one at a time for very large regions Tool-specific errors Some tools have specific requirements (see tool documentation) Try SuSiE first as it's the most robust default option <p>Performance Tips</p> <ul> <li>Start with smaller regions to test your setup</li> <li>Use <code>--tool susie</code> for initial exploration (fastest, most reliable)</li> <li>Save QC results to identify problematic studies before fine-mapping</li> </ul>"},{"location":"tutorial/quick-start/#next-steps","title":"Next Steps","text":"<p>Once you've run your first analysis:</p> <ul> <li>Single-Input Fine-Mapping - Learn about analyzing individual studies</li> <li>Multi-Input Fine-Mapping - Deep dive into multi-ancestry analysis  </li> <li>Advanced Topics - Customize parameters and understand tool options</li> </ul>"},{"location":"tutorial/quick-start/#example-with-real-data","title":"Example with Real Data","text":"<p>Using the included example data:</p> <pre><code># Navigate to example data directory\ncd exampledata/\n\n# Run pipeline on example locus\nmafm pipeline test_loci.txt results/ \\\n    --meta-method meta_all \\\n    --strategy multi_input \\\n    --tool multisusie \\\n    --max-causal 3\n</code></pre> <p>This will analyze the multi-ancestry example data and produce results in the <code>results/</code> directory. </p>"},{"location":"tutorial/single-input/","title":"Single-Input Fine-Mapping","text":"<p>Single-input fine-mapping is the traditional approach where you analyze one cohort or ancestry at a time. This strategy is ideal when you have well-powered individual studies or want to understand ancestry-specific genetic architecture.</p>"},{"location":"tutorial/single-input/#when-to-use-single-input-strategy","title":"When to Use Single-Input Strategy","text":"<p>Single-Input Use Cases</p> Well-powered individual studies When each study has sufficient power for fine-mapping alone Ancestry-specific analysis When you want to understand population-specific causal variants Exploratory analysis When investigating individual study characteristics before meta-analysis Heterogeneous effects When effect sizes vary significantly across populations"},{"location":"tutorial/single-input/#step-by-step-workflow","title":"Step-by-Step Workflow","text":""},{"location":"tutorial/single-input/#1-prepare-single-study-input","title":"1. Prepare Single-Study Input","text":"<p>For single-input analysis, your loci file should contain only one row per locus:</p> single_study_loci.txt<pre><code>chr start   end popu    sample_size cohort  prefix  locus_id\n8   41242482    42492482    EUR 442817  UKBB    data/EUR.UKBB.chr8_41242482_42492482    chr8_41242482_42492482\n</code></pre>"},{"location":"tutorial/single-input/#2-quality-control","title":"2. Quality Control","text":"<p>Quality control for single studies focuses on internal consistency:</p> <pre><code>mafm qc single_study_loci.txt qc_output/\n</code></pre>"},{"location":"tutorial/single-input/#qc-metrics-for-single-studies","title":"QC Metrics for Single Studies","text":"Inconsistency Parameter (s) Measures consistency between z-scores and LD matrix Values &gt; 0.2 suggest potential issues Kriging RSS Detects potential allele switches or data quality issues Flags variants with unexpected z-scores given LD structure LD Structure Analysis Eigenvalue decomposition of LD matrix Identifies problematic LD patterns MAF Comparison Compares allele frequencies between summary stats and LD reference Large differences suggest potential strand issues <p>Single-Study QC Limitations</p> <p>Single-study QC cannot detect: - Cross-study heterogeneity - Population-specific biases - Cohort-specific technical artifacts</p> <p>Consider multi-study QC when possible.</p>"},{"location":"tutorial/single-input/#3-fine-mapping","title":"3. Fine-Mapping","text":"<p>Run fine-mapping on your single study:</p> <pre><code>mafm finemap single_study_loci.txt output/ \\\n    --strategy single_input \\\n    --tool susie \\\n    --max-causal 5 \\\n    --coverage 0.95\n</code></pre>"},{"location":"tutorial/single-input/#supported-tools-for-single-input","title":"Supported Tools for Single-Input","text":""},{"location":"tutorial/single-input/#susie-recommended","title":"SuSiE (Recommended)","text":"<p>Best for: General purpose, robust across different scenarios</p> <pre><code>mafm finemap input.txt output/ \\\n    --strategy single_input \\\n    --tool susie \\\n    --max-causal 10 \\\n    --max-iter 100 \\\n    --estimate-residual-variance \\\n    --convergence-tol 1e-3\n</code></pre> <p>Key Parameters:</p> <ul> <li><code>--max-causal</code>: Maximum number of causal variants (default: 1)</li> <li><code>--max-iter</code>: Maximum iterations (default: 100)  </li> <li><code>--estimate-residual-variance</code>: Estimate phenotype variance (default: False)</li> <li><code>--convergence-tol</code>: Convergence tolerance (default: 1e-3)</li> </ul>"},{"location":"tutorial/single-input/#finemap","title":"FINEMAP","text":"<p>Best for: Bayesian model averaging, comprehensive uncertainty quantification</p> <pre><code>mafm finemap input.txt output/ \\\n    --strategy single_input \\\n    --tool finemap \\\n    --max-causal 5 \\\n    --n-iter 100000 \\\n    --n-threads 4\n</code></pre> <p>Key Parameters:</p> <ul> <li><code>--n-iter</code>: Number of MCMC iterations (default: 100000)</li> <li><code>--n-threads</code>: Number of parallel threads (default: 1)</li> </ul>"},{"location":"tutorial/single-input/#abf-approximate-bayes-factors","title":"ABF (Approximate Bayes Factors)","text":"<p>Best for: Fast, simple analysis with minimal assumptions</p> <pre><code>mafm finemap input.txt output/ \\\n    --strategy single_input \\\n    --tool abf \\\n    --var-prior 0.2\n</code></pre> <p>Key Parameters:</p> <ul> <li><code>--var-prior</code>: Prior variance (0.15 for quantitative, 0.2 for binary traits)</li> </ul>"},{"location":"tutorial/single-input/#carma","title":"CARMA","text":"<p>Best for: Model uncertainty quantification, outlier detection  </p> <pre><code>mafm finemap input.txt output/ \\\n    --strategy single_input \\\n    --tool carma \\\n    --max-causal 10 \\\n    --effect-size-prior \"Spike-slab\" \\\n    --y-var 1.0\n</code></pre> <p>Key Parameters:</p> <ul> <li><code>--effect-size-prior</code>: \"Spike-slab\" or \"Cauchy\" (default: \"Spike-slab\")</li> <li><code>--y-var</code>: Phenotype variance (default: 1.0)</li> <li><code>--bf-threshold</code>: Bayes factor threshold (default: 10.0)</li> </ul>"},{"location":"tutorial/single-input/#rsparsepro","title":"RSparsePro","text":"<p>Best for: Sparse regression approach, computational efficiency</p> <pre><code>mafm finemap input.txt output/ \\\n    --strategy single_input \\\n    --tool rsparsepro \\\n    --max-causal 5 \\\n    --eps 1e-5 \\\n    --cthres 0.7\n</code></pre> <p>Key Parameters:</p> <ul> <li><code>--eps</code>: Convergence criterion (default: 1e-5)</li> <li><code>--cthres</code>: Coverage threshold (default: 0.7)</li> <li><code>--minldthres</code>: Minimum LD within effect groups (default: 0.7)</li> </ul>"},{"location":"tutorial/single-input/#comparing-single-input-tools","title":"Comparing Single-Input Tools","text":"Tool Speed Memory Uncertainty Best Use Case SuSiE Fast Low Good General purpose FINEMAP Moderate Moderate Excellent Comprehensive analysis ABF Very Fast Very Low Basic Quick screening CARMA Slow High Excellent Research applications RSparsePro Fast Low Good Large regions"},{"location":"tutorial/single-input/#automatic-parameter-setting","title":"Automatic Parameter Setting","text":"<p>MAFM can automatically determine the maximum number of causal variants using COJO:</p> <pre><code>mafm finemap input.txt output/ \\\n    --strategy single_input \\\n    --tool susie \\\n    --set-L-by-cojo \\\n    --p-cutoff 5e-8 \\\n    --collinear-cutoff 0.9\n</code></pre> <p>COJO Parameters:</p> <ul> <li><code>--p-cutoff</code>: P-value threshold for conditioning (default: 5e-8)</li> <li><code>--collinear-cutoff</code>: Collinearity threshold (default: 0.9)</li> <li><code>--window-size</code>: Window for conditional analysis (default: 10Mb)</li> <li><code>--maf-cutoff</code>: MAF cutoff (default: 0.01)</li> </ul> <p>COJO Integration</p> <p>COJO (Conditional and Joint analysis) estimates the number of independent signals in a region. MAFM uses this to set <code>--max-causal</code> automatically, which often works better than arbitrary values.</p>"},{"location":"tutorial/single-input/#output-files","title":"Output Files","text":""},{"location":"tutorial/single-input/#posterior-inclusion-probabilities","title":"Posterior Inclusion Probabilities","text":"output/pips.txt<pre><code># SNPID PIP\n8-41234567-A-G  0.0234\n8-41235678-C-T  0.8765\n8-41236789-G-A  0.0456\n</code></pre>"},{"location":"tutorial/single-input/#credible-sets","title":"Credible Sets","text":"output/creds.json<pre><code>{\n  \"credible_sets\": {\n    \"cs1\": {\n      \"variants\": [\"8-41235678-C-T\", \"8-41235680-A-G\"],\n      \"coverage\": 0.95,\n      \"total_pip\": 0.96,\n      \"min_abs_corr\": 0.34\n    }\n  },\n  \"tool\": \"susie\",\n  \"strategy\": \"single_input\",\n  \"parameters\": {...}\n}\n</code></pre>"},{"location":"tutorial/single-input/#common-issues-and-solutions","title":"Common Issues and Solutions","text":"<p>Troubleshooting Single-Input Analysis</p> No credible sets found Try increasing <code>--max-causal</code> Check if region has sufficient signal (<code>--p-cutoff</code>) Verify LD matrix quality Very large credible sets May indicate weak signal or LD issues Try more stringent <code>--coverage</code> (e.g., 0.99) Consider region subdivision Tool convergence issues Increase <code>--max-iter</code> for iterative methods Try different <code>--convergence-tol</code> values Switch to more robust tool (SuSiE) Memory issues with large regions Use RSparsePro for efficiency Consider region subdivision Reduce LD matrix precision if possible"},{"location":"tutorial/single-input/#example-complete-single-study-analysis","title":"Example: Complete Single-Study Analysis","text":"<pre><code># 1. Quality control\nmafm qc my_study.txt qc_results/\n\n# 2. Review QC metrics (check s_estimate.txt, kriging_rss.txt)\n\n# 3. Fine-mapping with automatic L setting\nmafm finemap my_study.txt results/ \\\n    --strategy single_input \\\n    --tool susie \\\n    --set-L-by-cojo \\\n    --coverage 0.95 \\\n    --max-iter 100\n\n# 4. Review results (pips.txt, creds.json)\n</code></pre>"},{"location":"tutorial/single-input/#next-steps","title":"Next Steps","text":"<ul> <li>Multi-Input Fine-Mapping - Learn how to analyze multiple studies together</li> <li>Advanced Topics - Deep dive into tool-specific parameters and optimization </li> </ul>"},{"location":"tutorial/web-example/","title":"Web Visualization Example","text":"<p>This example demonstrates a complete MAFM workflow including web visualization.</p>"},{"location":"tutorial/web-example/#sample-dataset","title":"Sample Dataset","text":"<p>For this example, we'll use a hypothetical fine-mapping analysis with three loci across multiple populations.</p>"},{"location":"tutorial/web-example/#directory-structure","title":"Directory Structure","text":"<pre><code>example_analysis/\n\u251c\u2500\u2500 input/\n\u2502   \u2514\u2500\u2500 loci_info.txt\n\u251c\u2500\u2500 results/\n\u2502   \u251c\u2500\u2500 data/\n\u2502   \u2502   \u2514\u2500\u2500 real/\n\u2502   \u2502       \u251c\u2500\u2500 credset/\n\u2502   \u2502       \u2514\u2500\u2500 qc/\n\u2502   \u2514\u2500\u2500 webdata/  # Generated automatically\n\u2514\u2500\u2500 loci_files/\n    \u251c\u2500\u2500 allmeta_loci.txt\n    \u251c\u2500\u2500 popumeta_loci.txt\n    \u2514\u2500\u2500 nometa_loci.txt\n</code></pre>"},{"location":"tutorial/web-example/#step-by-step-workflow","title":"Step-by-Step Workflow","text":""},{"location":"tutorial/web-example/#1-run-fine-mapping-pipeline","title":"1. Run Fine-mapping Pipeline","text":"<p>First, run the complete fine-mapping pipeline:</p> <pre><code># Navigate to your analysis directory\ncd example_analysis/\n\n# Run the complete pipeline\nmafm pipeline input/loci_info.txt results/ \\\n  --tool susie \\\n  --strategy multi_input \\\n  --meta-method meta_all \\\n  --threads 10\n</code></pre> <p>This generates: - Fine-mapping results in <code>results/data/real/credset/</code> - Quality control metrics in <code>results/data/real/qc/</code> - Meta-analysis results if applicable</p>"},{"location":"tutorial/web-example/#2-prepare-loci-information-files","title":"2. Prepare Loci Information Files","text":"<p>Create loci information files for web visualization:</p> <p>allmeta_loci.txt: <pre><code>locus_id    chr start   end prefix  popu    cohort  sample_size\nlocus1  1   1000000 2000000 /path/to/locus1_data    EUR cohort1 50000\nlocus1  1   1000000 2000000 /path/to/locus1_data    ASN cohort2 30000\nlocus2  2   5000000 6000000 /path/to/locus2_data    EUR cohort1 50000\nlocus3  3   8000000 9000000 /path/to/locus3_data    AFR cohort3 25000\n</code></pre></p>"},{"location":"tutorial/web-example/#3-launch-web-interface","title":"3. Launch Web Interface","text":""},{"location":"tutorial/web-example/#basic-launch","title":"Basic Launch","text":"<pre><code># Simple launch from results directory\ncd results/\nmafm web\n</code></pre>"},{"location":"tutorial/web-example/#custom-configuration","title":"Custom Configuration","text":"<pre><code># Launch with specific settings\nmafm web results/ \\\n  --allmeta-loci loci_files/allmeta_loci.txt \\\n  --popumeta-loci loci_files/popumeta_loci.txt \\\n  --nometa-loci loci_files/nometa_loci.txt \\\n  --port 8080 \\\n  --threads 15\n</code></pre>"},{"location":"tutorial/web-example/#4-explore-results","title":"4. Explore Results","text":"<p>Once the web interface starts, open your browser to <code>http://localhost:8080</code>.</p>"},{"location":"tutorial/web-example/#home-page-features","title":"Home Page Features","text":"<ol> <li>Filter by Meta-analysis Method:</li> <li>Select \"allmeta\" to see all-ancestry meta-analysis results</li> <li>Choose \"popumeta\" for population-specific results</li> <li> <p>Pick \"nometa\" for individual cohort results</p> </li> <li> <p>Filter by Fine-mapping Tool:</p> </li> <li>Compare results across SuSiE, FINEMAP, etc.</li> <li> <p>Each tool may show different credible sets</p> </li> <li> <p>View Summary Statistics:</p> </li> <li>Number of credible sets per locus</li> <li>Total credible set sizes</li> <li>SNPs with high posterior probabilities</li> </ol>"},{"location":"tutorial/web-example/#locus-specific-views","title":"Locus-Specific Views","text":"<p>Click on any locus ID to see detailed results:</p> <ol> <li>Association Plots:</li> <li>Manhattan plot with LD coloring</li> <li> <p>Fine-mapping posterior probabilities</p> </li> <li> <p>Quality Control:</p> </li> <li>Lambda inflation values</li> <li>DENTIST-S statistics</li> <li> <p>MAF correlation metrics</p> </li> <li> <p>Credible Sets:</p> </li> <li>Highlighted credible variants</li> <li>Posterior inclusion probabilities</li> <li>Cross-tool comparisons</li> </ol>"},{"location":"tutorial/web-example/#advanced-usage","title":"Advanced Usage","text":""},{"location":"tutorial/web-example/#programmatic-access","title":"Programmatic Access","text":"<p>You can also process data and launch the web interface programmatically:</p> <pre><code>from mafm.web.export import export_for_web\nfrom mafm.web.app import run_app\n\n# Process data for web visualization\nexport_for_web(\n    data_base_dir=\"results/\",\n    webdata_dir=\"webdata/\",\n    allmeta_loci_file=\"loci_files/allmeta_loci.txt\",\n    popumeta_loci_file=\"loci_files/popumeta_loci.txt\",\n    nometa_loci_file=\"loci_files/nometa_loci.txt\",\n    threads=10\n)\n\n# Launch web application\nrun_app(\n    webdata_dir=\"webdata/\",\n    port=8080,\n    debug=True\n)\n</code></pre>"},{"location":"tutorial/web-example/#batch-processing","title":"Batch Processing","text":"<p>For multiple datasets:</p> <pre><code>#!/bin/bash\n# Process multiple result directories\n\ndatasets=(\"dataset1\" \"dataset2\" \"dataset3\")\nport=8080\n\nfor dataset in \"${datasets[@]}\"; do\n    echo \"Processing $dataset...\"\n\n    # Run fine-mapping if needed\n    mafm pipeline input/${dataset}_loci.txt results/${dataset}/\n\n    # Launch web interface on different ports\n    mafm web results/${dataset}/ \\\n      --port $((port++)) \\\n      --webdata-dir webdata/${dataset} &amp;\ndone\n\necho \"All web interfaces launched. Check ports 8080-8082\"\n</code></pre>"},{"location":"tutorial/web-example/#custom-styling","title":"Custom Styling","text":"<p>The web interface uses Bootstrap themes. You can customize the appearance by modifying the Dash app configuration in your scripts.</p>"},{"location":"tutorial/web-example/#troubleshooting","title":"Troubleshooting","text":""},{"location":"tutorial/web-example/#common-issues","title":"Common Issues","text":"<ol> <li>No data appears: Check that loci files have the correct format and paths</li> <li>Slow loading: Reduce the number of threads or use SSD storage</li> <li>Port conflicts: Use a different port with <code>--port</code> option</li> </ol>"},{"location":"tutorial/web-example/#getting-help","title":"Getting Help","text":"<pre><code># Get command help\nmafm web --help\n\n# Check version\nmafm --version\n\n# Enable debug mode\nmafm web results/ --debug\n</code></pre>"},{"location":"tutorial/web-example/#next-steps","title":"Next Steps","text":"<ul> <li>Try filtering by different meta-analysis methods</li> <li>Explore individual loci in detail</li> <li>Export plots for presentations</li> <li>Integrate web visualization into your analysis pipeline</li> <li>Share results with collaborators via the web interface</li> </ul> <p>For more information: - Full Web Tutorial - Advanced Usage - API Documentation </p>"},{"location":"tutorial/web-visualization/","title":"Web Visualization Tutorial","text":"<p>MAFM provides an interactive web interface for exploring fine-mapping results. This tutorial covers how to install, configure, and use the web visualization features.</p>"},{"location":"tutorial/web-visualization/#prerequisites","title":"Prerequisites","text":"<p>Before using the web interface, ensure you have:</p> <ol> <li>Completed fine-mapping analysis with MAFM</li> <li>Generated results in the expected directory structure</li> <li>Loci information files (at least one of: allmeta, popumeta, or nometa)</li> </ol>"},{"location":"tutorial/web-visualization/#installation","title":"Installation","text":""},{"location":"tutorial/web-visualization/#install-web-dependencies","title":"Install Web Dependencies","text":"<p>The web visualization requires additional dependencies that are not included in the base MAFM installation:</p> <pre><code># Install MAFM with web dependencies\npip install mafm[web]\n\n# Or install dependencies separately\npip install dash dash-bootstrap-components dash-mantine-components plotly\n</code></pre>"},{"location":"tutorial/web-visualization/#verify-installation","title":"Verify Installation","text":"<p>Check that the web command is available:</p> <pre><code>mafm web --help\n</code></pre>"},{"location":"tutorial/web-visualization/#quick-start","title":"Quick Start","text":""},{"location":"tutorial/web-visualization/#basic-usage","title":"Basic Usage","text":"<p>The simplest way to start the web interface:</p> <pre><code># Navigate to your MAFM results directory\ncd /path/to/your/mafm/results\n\n# Launch web interface (uses current directory)\nmafm web\n</code></pre> <p>This will: 1. Look for default loci files in standard locations 2. Process data for web visualization (if needed) 3. Start the web server on <code>http://localhost:8080</code></p>"},{"location":"tutorial/web-visualization/#with-custom-data-directory","title":"With Custom Data Directory","text":"<pre><code># Specify a different data directory\nmafm web /path/to/mafm/results --port 8080\n</code></pre>"},{"location":"tutorial/web-visualization/#command-options","title":"Command Options","text":""},{"location":"tutorial/web-visualization/#required-arguments","title":"Required Arguments","text":"<ul> <li><code>data_dir</code>: Base directory containing fine-mapping data (default: current directory)</li> </ul>"},{"location":"tutorial/web-visualization/#optional-parameters","title":"Optional Parameters","text":""},{"location":"tutorial/web-visualization/#data-configuration","title":"Data Configuration","text":"<ul> <li><code>--webdata-dir, -w</code>: Directory for processed web data (default: \"webdata\")</li> <li><code>--allmeta-loci, -a</code>: Path to allmeta loci info file</li> <li><code>--popumeta-loci, -p</code>: Path to popumeta loci info file</li> <li><code>--nometa-loci, -n</code>: Path to nometa loci info file</li> <li><code>--force-regenerate, -f</code>: Force regeneration of web data</li> </ul>"},{"location":"tutorial/web-visualization/#server-configuration","title":"Server Configuration","text":"<ul> <li><code>--port</code>: Port to run web server on (default: 8080)</li> <li><code>--host</code>: Host to bind web server to (default: \"0.0.0.0\")</li> <li><code>--debug</code>: Run in debug mode</li> </ul>"},{"location":"tutorial/web-visualization/#processing-configuration","title":"Processing Configuration","text":"<ul> <li><code>--threads, -t</code>: Number of threads for data processing (default: 10)</li> </ul>"},{"location":"tutorial/web-visualization/#data-structure","title":"Data Structure","text":""},{"location":"tutorial/web-visualization/#expected-directory-layout","title":"Expected Directory Layout","text":"<p>Your MAFM results should follow this structure:</p> <pre><code>mafm_results/\n\u251c\u2500\u2500 data/\n\u2502   \u2514\u2500\u2500 real/\n\u2502       \u251c\u2500\u2500 credset/           # Fine-mapping results\n\u2502       \u2502   \u251c\u2500\u2500 allmeta/\n\u2502       \u2502   \u251c\u2500\u2500 popumeta/\n\u2502       \u2502   \u2514\u2500\u2500 nometa/\n\u2502       \u2514\u2500\u2500 qc/                # Quality control results\n\u2502           \u251c\u2500\u2500 allmeta/\n\u2502           \u251c\u2500\u2500 popumeta/\n\u2502           \u2514\u2500\u2500 nometa/\n\u251c\u2500\u2500 loci_files/\n\u2502   \u251c\u2500\u2500 all_meta_loci_sig.txt  # Allmeta loci info\n\u2502   \u251c\u2500\u2500 loci_info_sig.txt      # Popumeta loci info\n\u2502   \u2514\u2500\u2500 all_loci_list_sig.txt  # Nometa loci info\n\u2514\u2500\u2500 webdata/                   # Generated web data (created automatically)\n</code></pre>"},{"location":"tutorial/web-visualization/#loci-information-files","title":"Loci Information Files","text":"<p>Each loci file should contain columns like: - <code>locus_id</code>: Unique identifier for each locus - <code>chr</code>: Chromosome - <code>start</code>: Start position - <code>end</code>: End position - <code>prefix</code>: File prefix for sumstats and LD data - <code>popu</code>: Population code - <code>cohort</code>: Cohort identifier - <code>sample_size</code>: Sample size</p>"},{"location":"tutorial/web-visualization/#usage-examples","title":"Usage Examples","text":""},{"location":"tutorial/web-visualization/#example-1-basic-launch","title":"Example 1: Basic Launch","text":"<pre><code># Simple launch from results directory\ncd /path/to/mafm/results\nmafm web\n</code></pre>"},{"location":"tutorial/web-visualization/#example-2-custom-configuration","title":"Example 2: Custom Configuration","text":"<pre><code># Specify custom loci files and settings\nmafm web /path/to/data \\\n  --allmeta-loci /path/to/allmeta_loci.txt \\\n  --popumeta-loci /path/to/popumeta_loci.txt \\\n  --nometa-loci /path/to/nometa_loci.txt \\\n  --webdata-dir custom_webdata \\\n  --port 8080 \\\n  --threads 20\n</code></pre>"},{"location":"tutorial/web-visualization/#example-3-force-data-regeneration","title":"Example 3: Force Data Regeneration","text":"<pre><code># Force regeneration of web data\nmafm web /path/to/data --force-regenerate\n</code></pre>"},{"location":"tutorial/web-visualization/#example-4-debug-mode","title":"Example 4: Debug Mode","text":"<pre><code># Run in debug mode for development\nmafm web /path/to/data --debug --port 8081\n</code></pre>"},{"location":"tutorial/web-visualization/#web-interface-features","title":"Web Interface Features","text":""},{"location":"tutorial/web-visualization/#home-page","title":"Home Page","text":"<p>The main dashboard provides:</p>"},{"location":"tutorial/web-visualization/#interactive-filtering","title":"Interactive Filtering","text":"<ul> <li>Meta-analysis Method: Choose from allmeta, popumeta, or nometa</li> <li>Fine-mapping Tool: Select specific tools (SuSiE, FINEMAP, etc.)</li> <li>Plot Type: View different metrics (credible sets, PIP statistics)</li> </ul>"},{"location":"tutorial/web-visualization/#visualizations","title":"Visualizations","text":"<ul> <li>Bar Plot: Interactive plots showing statistics per locus</li> <li>Summary Table: Sortable table with locus information and clickable links</li> </ul>"},{"location":"tutorial/web-visualization/#key-metrics","title":"Key Metrics","text":"<ul> <li>Number of credible sets per locus</li> <li>Credible set sizes</li> <li>Number of SNPs with high PIP values</li> <li>SNP counts by p-value thresholds</li> </ul>"},{"location":"tutorial/web-visualization/#locus-pages","title":"Locus Pages","text":"<p>Detailed views for individual loci include:</p>"},{"location":"tutorial/web-visualization/#association-plots","title":"Association Plots","text":"<ul> <li>LocusZoom Plot: Manhattan plot with LD coloring</li> <li>Regional Association: SNP-level fine-mapping results</li> </ul>"},{"location":"tutorial/web-visualization/#quality-control","title":"Quality Control","text":"<ul> <li>QC Metrics Table: Lambda, DENTIST-S, MAF correlation</li> <li>LD Diagnostics: Fourth moment, decay patterns</li> <li>Expected vs Observed: Z-score distributions</li> </ul>"},{"location":"tutorial/web-visualization/#fine-mapping-results","title":"Fine-mapping Results","text":"<ul> <li>Multiple Tool Comparison: Compare results across methods</li> <li>Credible Set Visualization: Highlight credible variants</li> <li>PIP Distributions: Posterior inclusion probabilities</li> </ul>"},{"location":"tutorial/web-visualization/#data-processing","title":"Data Processing","text":""},{"location":"tutorial/web-visualization/#automatic-processing","title":"Automatic Processing","text":"<p>When you run <code>mafm web</code>, it automatically:</p> <ol> <li>Checks for existing web data in the webdata directory</li> <li>Processes raw results if web data doesn't exist or is outdated</li> <li>Generates summary files for the web interface</li> <li>Optimizes data format for fast web access</li> </ol>"},{"location":"tutorial/web-visualization/#manual-processing","title":"Manual Processing","text":"<p>You can also process data separately:</p> <pre><code>from mafm.web.export import export_for_web\n\nexport_for_web(\n    data_base_dir=\"/path/to/mafm/results\",\n    webdata_dir=\"webdata\",\n    allmeta_loci_file=\"allmeta_loci.txt\",\n    popumeta_loci_file=\"popumeta_loci.txt\",\n    nometa_loci_file=\"nometa_loci.txt\",\n    threads=10\n)\n</code></pre>"},{"location":"tutorial/web-visualization/#advanced-configuration","title":"Advanced Configuration","text":""},{"location":"tutorial/web-visualization/#custom-web-data-directory","title":"Custom Web Data Directory","text":"<pre><code># Use custom directory for processed web data\nmafm web /path/to/data --webdata-dir /custom/path/webdata\n</code></pre>"},{"location":"tutorial/web-visualization/#multiple-meta-analysis-types","title":"Multiple Meta-analysis Types","text":"<p>You can include results from different meta-analysis approaches:</p> <pre><code>mafm web /path/to/data \\\n  --allmeta-loci allmeta_results.txt \\      # All-ancestry meta\n  --popumeta-loci popumeta_results.txt \\    # Population-specific meta\n  --nometa-loci nometa_results.txt          # No meta-analysis\n</code></pre>"},{"location":"tutorial/web-visualization/#performance-tuning","title":"Performance Tuning","text":"<p>For large datasets:</p> <pre><code># Increase processing threads\nmafm web /path/to/data --threads 30\n\n# Use SSD storage for webdata\nmafm web /path/to/data --webdata-dir /fast/ssd/webdata\n</code></pre>"},{"location":"tutorial/web-visualization/#troubleshooting","title":"Troubleshooting","text":""},{"location":"tutorial/web-visualization/#common-issues","title":"Common Issues","text":""},{"location":"tutorial/web-visualization/#missing-dependencies","title":"Missing Dependencies","text":"<pre><code># Error: \"Web dependencies not found\"\npip install mafm[web]\n</code></pre>"},{"location":"tutorial/web-visualization/#no-data-found","title":"No Data Found","text":"<pre><code># Error: \"No loci files found\"\n# Solution: Specify loci files explicitly\nmafm web /path/to/data --allmeta-loci /path/to/loci.txt\n</code></pre>"},{"location":"tutorial/web-visualization/#port-already-in-use","title":"Port Already in Use","text":"<pre><code># Error: \"Port 8080 is already in use\"\n# Solution: Use different port\nmafm web /path/to/data --port 8081\n</code></pre>"},{"location":"tutorial/web-visualization/#out-of-memory","title":"Out of Memory","text":"<pre><code># For large datasets, reduce threads\nmafm web /path/to/data --threads 5\n</code></pre>"},{"location":"tutorial/web-visualization/#debug-mode","title":"Debug Mode","text":"<p>Enable debug mode for troubleshooting:</p> <pre><code>mafm web /path/to/data --debug\n</code></pre> <p>This provides: - Detailed error messages - Live code reloading - Enhanced logging</p>"},{"location":"tutorial/web-visualization/#log-files","title":"Log Files","text":"<p>Check MAFM logs for processing issues: - Processing errors during data export - File format issues - Memory usage problems</p>"},{"location":"tutorial/web-visualization/#best-practices","title":"Best Practices","text":""},{"location":"tutorial/web-visualization/#data-organization","title":"Data Organization","text":"<ol> <li>Consistent naming: Use consistent file naming conventions</li> <li>Complete data: Ensure all required files are present</li> <li>Valid formats: Check that input files have correct formats</li> </ol>"},{"location":"tutorial/web-visualization/#performance","title":"Performance","text":"<ol> <li>SSD storage: Use SSD for webdata directory</li> <li>Adequate memory: Ensure sufficient RAM for large datasets</li> <li>Network access: Use appropriate host/port settings</li> </ol>"},{"location":"tutorial/web-visualization/#security","title":"Security","text":"<ol> <li>Internal networks: Bind to localhost for local use only</li> <li>Firewall rules: Configure appropriate network access</li> <li>Data sensitivity: Consider data privacy when sharing URLs</li> </ol>"},{"location":"tutorial/web-visualization/#integration-with-workflows","title":"Integration with Workflows","text":""},{"location":"tutorial/web-visualization/#pipeline-integration","title":"Pipeline Integration","text":"<p>Integrate web visualization into your analysis pipeline:</p> <pre><code>#!/bin/bash\n# Complete analysis pipeline\n\n# 1. Run fine-mapping\nmafm pipeline input_loci.txt results/\n\n# 2. Launch web interface\nmafm web results/ --port 8080\n</code></pre>"},{"location":"tutorial/web-visualization/#batch-processing","title":"Batch Processing","text":"<p>For multiple datasets:</p> <pre><code># Process multiple result sets\nfor dataset in dataset1 dataset2 dataset3; do\n    mafm web results/${dataset} --webdata-dir webdata/${dataset} --port 808${i}\n    ((i++))\ndone\n</code></pre>"},{"location":"tutorial/web-visualization/#next-steps","title":"Next Steps","text":"<ul> <li>Explore the home page to get an overview of your results</li> <li>Click on individual loci for detailed views</li> <li>Use filtering options to focus on specific analyses</li> <li>Export plots and tables for presentations</li> <li>Integrate with your analysis workflow</li> </ul> <p>For more advanced usage, see: - Advanced Tutorial - API Documentation - Contributing Guide </p>"}]}